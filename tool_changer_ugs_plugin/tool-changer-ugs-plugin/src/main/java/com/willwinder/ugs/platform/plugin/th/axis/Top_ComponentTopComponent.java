/*
 * Copyright (C) 2024 camren-chraplak
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.willwinder.ugs.platform.plugin.th.axis;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.willwinder.ugs.platform.plugin.th.axis//Top_Component//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "Top_ComponentTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "output", openAtStartup = false)
@ActionID(category = "Window", id = "com.willwinder.ugs.platform.plugin.th.axis.Top_ComponentTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_Top_ComponentAction",
        preferredID = "Top_ComponentTopComponent"
)
@Messages({
    "CTL_Top_ComponentAction=Top_Component",
    "CTL_Top_ComponentTopComponent=Top_Component Window",
    "HINT_Top_ComponentTopComponent=This is a Top_Component window"
})
public final class Top_ComponentTopComponent extends TopComponent {

    public Top_ComponentTopComponent() {
        initComponents();
        setName(Bundle.CTL_Top_ComponentTopComponent());
        setToolTipText(Bundle.HINT_Top_ComponentTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        toolTable = new javax.swing.JTable();

        toolTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "Test", "Description",  new Float(0.5), null},
                {null, "Test2", "Second",  new Float(1.0), null}
            },
            new String [] {
                "Tool ID #", "Tool Name", "Description", "Diameter (in)", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Byte.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(toolTable);
        if (toolTable.getColumnModel().getColumnCount() > 0) {
            toolTable.getColumnModel().getColumn(0).setResizable(false);
            toolTable.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(Top_ComponentTopComponent.class, "Top_ComponentTopComponent.toolTable.columnModel.title0")); // NOI18N
            toolTable.getColumnModel().getColumn(1).setResizable(false);
            toolTable.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(Top_ComponentTopComponent.class, "Top_ComponentTopComponent.toolTable.columnModel.title1")); // NOI18N
            toolTable.getColumnModel().getColumn(2).setResizable(false);
            toolTable.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(Top_ComponentTopComponent.class, "Top_ComponentTopComponent.toolTable.columnModel.title2")); // NOI18N
            toolTable.getColumnModel().getColumn(3).setResizable(false);
            toolTable.getColumnModel().getColumn(3).setHeaderValue(org.openide.util.NbBundle.getMessage(Top_ComponentTopComponent.class, "Top_ComponentTopComponent.toolTable.columnModel.title3")); // NOI18N
            toolTable.getColumnModel().getColumn(4).setResizable(false);
            toolTable.getColumnModel().getColumn(4).setHeaderValue(org.openide.util.NbBundle.getMessage(Top_ComponentTopComponent.class, "Top_ComponentTopComponent.toolTable.columnModel.title4")); // NOI18N
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable toolTable;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
